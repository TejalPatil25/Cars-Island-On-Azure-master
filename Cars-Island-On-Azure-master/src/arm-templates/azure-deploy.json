{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "Environment": "Dev",
        "Project": "Cars Island"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "appinsights_name": {
      "defaultValue": "appi-cars-island-dev",
      "type": "String"
    },
    "web_portal_name": {
      "defaultValue": "app-cars-island-portal-dev",
      "type": "String"
    },
    "web_api_name": {
      "defaultValue": "app-cars-island-api-dev",
      "type": "String"
    },
    "web_apps_server_farm_name": {
      "defaultValue": "appscarsislanddev",
      "type": "String"
    },
    "cosmos_database_account_name": {
      "defaultValue": "cosmos-cars-island-dev",
      "type": "String"
    },
    "cosmos_database_name": {
      "defaultValue": "cars-island",
      "type": "String"
    },
    "cosmos_database_car_container_name": {
      "defaultValue": "car",
      "type": "String"
    },
    "cosmos_database_enquiry_container_name": {
      "defaultValue": "enquiry",
      "type": "String"
    },
    "storage_account_name": {
      "defaultValue": "stcarsislanddev",
      "type": "String"
    },
    "keyvault": {
      "type": "Object",
      "defaultValue": "kv-cars-island-dev",
      "metadata": {
        "description": "Required. Object with parameters for KeyVault"
      }
    },
    "service_bus_namespace_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "service_bus_queue_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Queue"
      }
    },
    "func_apps_server_farm_name": {
      "defaultValue": "plancarsislandfuncappdev",
      "type": "String"
    },
    "func_apps_storage_account_name": {
      "defaultValue": "stcarsislandfuncappdev",
      "type": "String"
    },
    "func_apps_name": {
      "defaultValue": "func-cars-island-dev",
      "type": "String"
    },
    "sendgrid_name": {
      "defaultValue": "sendgrid-cars-island-dev",
      "type": "String"
    },
    "sendgrid_plan_name": {
      "defaultValue": "free",
      "type": "String"
    },
    "sendgrid_plan_publisher": {
      "defaultValue": "Sendgrid",
      "type": "String"
    },
    "sendgrid_plan_product": {
      "defaultValue": "sendgrid_azure",
      "type": "String"
    },
    "sendgrid_plan_promotion_code": {
      "defaultValue": "",
      "type": "String"
    },
    "sendgrid_password": {
      "defaultValue": "",
      "type": "String"
    },
    "sendgrid_email": {
      "defaultValue": "",
      "type": "String"
    },
    "sendgrid_firstName": {
      "defaultValue": "",
      "type": "String"
    },
    "sendgrid_lastName": {
      "defaultValue": "",
      "type": "String"
    },
    "sendgrid_company": {
      "defaultValue": "Cars Island Dev",
      "type": "String"
    },
    "sendgrid_website": {
      "defaultValue": "techmindfactory.com",
      "type": "String"
    },
    "sendgrid_acceptMarketingEmails": {
      "defaultValue": "0",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('web_apps_server_farm_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "D1",
        "tier": "Shared",
        "size": "D1",
        "family": "D",
        "capacity": 0
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('web_portal_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('web_apps_server_farm_name'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('web_portal_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('web_portal_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('web_apps_server_farm_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
            "metadata": [
                {
                    "name": "CURRENT_STACK",
                    "value": "dotnetcore"
                }
            ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('web_portal_name'), '/', parameters('web_portal_name'), '.azurewebsites.net')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('web_portal_name'))]"
      ],
      "properties": {
        "siteName": "app-cars-island-portal",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/siteextensions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('web_portal_name'), '/Microsoft.AspNetCore.AzureAppServices.SiteExtension')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('web_portal_name'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('web_api_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('web_apps_server_farm_name'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('web_api_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('web_api_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('web_apps_server_farm_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
            "metadata": [
                {
                    "name": "CURRENT_STACK",
                    "value": "dotnetcore"
                }
            ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('web_api_name'), '/', parameters('web_api_name'), '.azurewebsites.net')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('web_api_name'))]"
      ],
      "properties": {
        "siteName": "app-cars-island-api",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/siteextensions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('web_api_name'), '/Microsoft.AspNetCore.AzureAppServices.SiteExtension')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('web_api_name'))]"
      ]
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[parameters('appinsights_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "IbizaWebAppExtensionCreate",
        "RetentionInDays": 90,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2020-03-01",
      "name": "[parameters('cosmos_database_account_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "enableFreeTier": false,
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-03-01",
      "name": "[concat(parameters('cosmos_database_account_name'), '/', parameters('cosmos_database_name'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_database_account_name'))]" ],
      "properties": {
        "resource": {
          "id": "cars-island"
        },
        "options": { "throughput": 400 }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('cosmos_database_account_name'), '/', parameters('cosmos_database_name'), '/', parameters('cosmos_database_car_container_name'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmos_database_account_name'), parameters('cosmos_database_name'))]" ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmos_database_car_container_name')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('cosmos_database_account_name'), '/', parameters('cosmos_database_name'), '/', parameters('cosmos_database_enquiry_container_name'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmos_database_account_name'), parameters('cosmos_database_name'))]" ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmos_database_enquiry_container_name')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[parameters('storage_account_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storage_account_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storage_account_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storage_account_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storage_account_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storage_account_name'), '/default/car-images')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storage_account_name'), '/default/enquiry-files')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[parameters('keyvault').name]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "enabledForDeployment": "[parameters('keyvault').enabledForDeployment]",
        "enabledForTemplateDeployment": "[parameters('keyvault').enabledForTemplateDeployment]",
        "enabledForDiskEncryption": "[parameters('keyvault').enabledForDiskEncryption]",
        "enableSoftDelete": "[parameters('keyvault').enableSoftDelete]",
        "softDeleteRetentionInDays": "[parameters('keyvault').softDeleteRetentionInDays]",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[parameters('service_bus_namespace_name')]",
      "type": "Microsoft.ServiceBus/Namespaces",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {},
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('service_bus_queue_name')]",
          "type": "Queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', parameters('service_bus_namespace_name'))]"
          ],
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": "1024",
            "requiresDuplicateDetection": "false",
            "requiresSession": "false",
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "deadLetteringOnMessageExpiration": "false",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": "10",
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": "false",
            "enableExpress": "false"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[parameters('func_apps_server_farm_name')]",
      "tags": "[parameters('resourceTags')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('func_apps_server_farm_name')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[parameters('func_apps_storage_account_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('func_apps_name')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('func_apps_storage_account_name'))]",
        "[resourceId('Microsoft.Insights/components', parameters('appinsights_name'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('func_apps_server_farm_name'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('func_apps_server_farm_name'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('func_apps_storage_account_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('func_apps_storage_account_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('func_apps_storage_account_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('func_apps_storage_account_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('func_apps_name'))]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            }
          ]
        }
      }
    },
    {
      "type": "Sendgrid.Email/accounts",
      "apiVersion": "2015-01-01",
      "name": "[parameters('sendgrid_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "plan": {
        "name": "[parameters('sendgrid_plan_name')]",
        "publisher": "[parameters('sendgrid_plan_publisher')]",
        "product": "[parameters('sendgrid_plan_product')]",
        "promotionCode": "[parameters('sendgrid_plan_promotion_code')]"
      },
      "properties": {
        "password": "[parameters('sendgrid_password')]",
        "acceptMarketingEmails": "[parameters('sendgrid_acceptMarketingEmails')]",
        "email": "[parameters('sendgrid_email')]",
        "firstName": "[parameters('sendgrid_firstName')]",
        "lastName": "[parameters('sendgrid_lastName')]",
        "company": "[parameters('sendgrid_company')]",
        "website": "[parameters('sendgrid_website')]"
      }
    }
  ]
}